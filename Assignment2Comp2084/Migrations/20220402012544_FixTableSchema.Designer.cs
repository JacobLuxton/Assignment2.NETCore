// <auto-generated />
using System;
using Assignment2Comp2084.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assignment2Comp2084.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220402012544_FixTableSchema")]
    partial class FixTableSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assignment2Comp2084.Models.Booking", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("TattooShopID")
                        .HasColumnType("int");

                    b.HasKey("BookingID");

                    b.HasIndex("ClientID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("TattooShopID");

                    b.ToTable("bookings");
                });

            modelBuilder.Entity("Assignment2Comp2084.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientAge")
                        .HasColumnType("int");

                    b.Property<string>("ClientGender")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ClientPhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("ClientID");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("Assignment2Comp2084.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeAge")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TattooShopID")
                        .HasColumnType("int");

                    b.Property<string>("TattooSpecialty")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("TattooShopID");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("Assignment2Comp2084.Models.Owner", b =>
                {
                    b.Property<int>("OwnerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OwnerAdress")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("OwnerAge")
                        .HasColumnType("int");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OwnerPhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("OwnerID");

                    b.ToTable("owners");
                });

            modelBuilder.Entity("Assignment2Comp2084.Models.TattooShop", b =>
                {
                    b.Property<int>("TattooShopID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OwnerID")
                        .HasColumnType("int");

                    b.Property<string>("TattooShopLocation")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TattooShopName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TattooShopNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TattooShopID");

                    b.HasIndex("OwnerID");

                    b.ToTable("tattooShops");
                });

            modelBuilder.Entity("Assignment2Comp2084.Models.Booking", b =>
                {
                    b.HasOne("Assignment2Comp2084.Models.Client", "Client")
                        .WithMany("Booking")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment2Comp2084.Models.Employee", "Employee")
                        .WithMany("Booking")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment2Comp2084.Models.TattooShop", "TattooShop")
                        .WithMany("Booking")
                        .HasForeignKey("TattooShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Employee");

                    b.Navigation("TattooShop");
                });

            modelBuilder.Entity("Assignment2Comp2084.Models.Employee", b =>
                {
                    b.HasOne("Assignment2Comp2084.Models.TattooShop", "TattooShop")
                        .WithMany("Employee")
                        .HasForeignKey("TattooShopID");

                    b.Navigation("TattooShop");
                });

            modelBuilder.Entity("Assignment2Comp2084.Models.TattooShop", b =>
                {
                    b.HasOne("Assignment2Comp2084.Models.Owner", "Owner")
                        .WithMany("TattooShop")
                        .HasForeignKey("OwnerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Assignment2Comp2084.Models.Client", b =>
                {
                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Assignment2Comp2084.Models.Employee", b =>
                {
                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Assignment2Comp2084.Models.Owner", b =>
                {
                    b.Navigation("TattooShop");
                });

            modelBuilder.Entity("Assignment2Comp2084.Models.TattooShop", b =>
                {
                    b.Navigation("Booking");

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
